version: 2.1
orbs:
  slack: circleci/slack@4.10.1
jobs:
  lint:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install eslint
      - run: npm run lint
      - slack/notify:
          event: pass
          template: basic_success_1
      - slack/notify:
          event: fail
          template: basic_fail_1
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: |
            if [ $CIRCLE_BRANCH = 'production' ]; then
              yarn build
            fi
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy:
    working_directory: ~/repo
    docker:
      - image: innovatorjapan/awscli:latest
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1
      - slack/notify:
          event: fail
          template: basic_fail_1
      - attach_workspace:
          at: .
      - run:
          name: Deploy
          command: |
            if [ $CIRCLE_BRANCH = 'production' ]; then
              aws s3 sync build s3://sd.genesis --delete --exact-timestamps;
            fi
workflows:
  'ESLint':
    jobs:
      - lint:
          context:
            - genesis-slack
          filters:
            branches:
              ignore: production
  'Build and deploy to AWS S3 bucket':
    jobs:
      - build:
          filters:
            branches:
              only:
                - production
      - deploy:
          context:
            - genesis-slack
          requires:
            - build
          filters:
            branches:
              only:
                - production
